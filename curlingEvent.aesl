<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II">var STATE

var STOP = 0
var GO_1 = 1
var TURN = 2
var GO_2 = 3
var REVERSE = 4
var GO_3 = 5
var SPIN = 6

var SPEED = 300

var THRESHOLD = 100

var groundData

var timeCounter[5] = [0,0,0,0,0]

timer.period[0] = 500

onevent timer0
	
	timeCounter[4]++
	
	if timeCounter[4] > 120 then
		STATE = STOP
	end

    if STATE == GO_1 then
        timeCounter[0]++

        if timeCounter[0] &lt;= 7 then
            motor.left.target = SPEED
            motor.right.target = SPEED
        elseif timeCounter[0] > 7 and timeCounter[0] &lt;= 9 then
            motor.left.target = 0
            motor.right.target = 0
        else
            STATE = TURN
        end

    end

    if STATE == TURN then
        timeCounter[1]++

        if timeCounter[1] &lt;= 3 then
            motor.left.target = SPEED
            motor.right.target = 0
        elseif timeCounter[1] > 3 and timeCounter[1] &lt;= 5 then
            motor.left.target = 0
            motor.right.target = 0
        else   
            STATE = GO_2
        end
    end

    if STATE == REVERSE then
        timeCounter[2]++

        if timeCounter[2] &lt;= 7 then
            motor.left.target = -SPEED * 3/2
            motor.right.target = -SPEED
        elseif timeCounter[2] > 7 and timeCounter[2] &lt;= 9 then
            motor.left.target = 0
            motor.right.target = 0
        else
            STATE = GO_3
        end
    end
    
    if STATE == GO_3 then
    		timeCounter[3]++
    		
    		if timeCounter[3] &lt;= 25 then
    			motor.left.target = SPEED
    			motor.right.target = SPEED
    		end
    		
    end

onevent prox

    call math.stat(prox.ground.delta[0:1],0,0,groundData)

    if STATE == STOP then

        timeCounter[0] = 0
        timeCounter[1] = 0
        timeCounter[2] = 0
        timeCounter[3] = 0
        timeCounter[4] = 0

        motor.left.target = 0
        motor.right.target = 0
    end

    if STATE == GO_2 then

        motor.left.target = SPEED
        motor.right.target = SPEED
        
        if prox.ground.delta[0] &lt;= THRESHOLD or prox.ground.delta[1] &lt;= THRESHOLD or groundData &lt;= THRESHOLD then

            motor.left.target = 0
            motor.right.target = 0
            STATE = REVERSE

        end

    end
	
	if STATE == GO_3 then
	
        if prox.ground.delta[0] &lt;= THRESHOLD * 2 or prox.ground.delta[1] &lt;= THRESHOLD * 2 or groundData &lt;= THRESHOLD * 2 then

            motor.left.target = 0
            motor.right.target = 0
            STATE = SPIN

        end
	end

	if STATE == SPIN then
		motor.left.target = -SPEED * 10
		motor.right.target = SPEED * 10
	end
	
onevent button.forward
    STATE = GO_1
onevent button.backward
    STATE = STOP
</node>


</network>
